<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.cloudera.cyclehire.repo</groupId>
	<artifactId>cloudera-cyclehire-repo-runtime</artifactId>
	<packaging>pom</packaging>
	<version>0.0.3-SNAPSHOT</version>

	<parent>
		<groupId>com.cloudera.cyclehire</groupId>
		<artifactId>cloudera-cyclehire-repo</artifactId>
		<version>0.0.3-SNAPSHOT</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>com.twitter</groupId>
			<artifactId>parquet-hadoop-bundle</artifactId>
			<version>${hadoop-parquet.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>download-runtime</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<mkdir dir="${settings.localRepository}/org/apache/hadoop/hadoop-tar/${hadoop.version}" />
								<get src="http://archive.cloudera.com/cdh${hadoop-cdh.version}/cdh/${hadoop-cdh.version}/hadoop-${hadoop.version}.tar.gz" dest="${settings.localRepository}/org/apache/hadoop/hadoop-tar/${hadoop.version}" verbose="false" usetimestamp="true" />
							</target>
						</configuration>
					</execution>
					<execution>
						<id>unpack-runtime</id>
						<phase>process-sources</phase>
						<configuration>
							<target>
								<mkdir dir="${project.build.directory}/${project.runtime-test-dir}" />
								<untar src="${settings.localRepository}/org/apache/hadoop/hadoop-tar/${hadoop.version}/hadoop-${hadoop.version}.tar.gz" dest="${project.build.directory}/${project.runtime-test-dir}" compression="gzip" />
								<symlink link="${project.build.directory}/${project.runtime-test-dir}/hadoop" resource="${project.build.directory}/${project.runtime-test-dir}/hadoop-${hadoop.version}" failonerror="false" overwrite="true" />
								<echo file="${project.build.directory}/${project.runtime-test-dir}/hadoop/etc/hadoop/hadoop-env.sh" append="true">
									export HADOOP_CLIENT_OPTS="$HADOOP_CLIENT_OPTS
									-Xmx${project.runtime.heap.max}m"
								</echo>
								<chmod dir="${project.build.directory}/${project.runtime-test-dir}/hadoop/bin" includes="*" perm="+x" />
								<mkdir dir="${project.build.directory}/${project.runtime-test-dir}/hadoop/bin-mapreduce1" />
								<chmod dir="${project.build.directory}/${project.runtime-test-dir}/hadoop/bin-mapreduce1" includes="*" perm="+x" />
								<copy todir="${project.build.directory}/${project.runtime-test-dir}/hadoop/bin" failonerror="false">
									<fileset dir="${project.build.directory}/${project.runtime-test-dir}/hadoop/bin-mapreduce1" />
								</copy>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/${project.runtime-test-dir}/hadoop/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
